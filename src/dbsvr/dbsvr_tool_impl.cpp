/* dbsvr_tool_impl.cpp

 Generated by phxrpc_pb2tool from dbsvr.proto

*/

#include "dbsvr_tool_impl.h"

#include "dbsvr_client.h"

#include "phxrpc/file.h"


using namespace phxrpc;
using namespace std;


DbsvrToolImpl::DbsvrToolImpl() {
}

DbsvrToolImpl::~DbsvrToolImpl() {
}

int DbsvrToolImpl::PHXEcho(phxrpc::OptMap &opt_map) {
    google::protobuf::StringValue req;
    google::protobuf::StringValue resp;

    if (nullptr == opt_map.Get('s')) return -1;

    req.set_value(opt_map.Get('s'));

    DbsvrClient client;
    int ret{client.PHXEcho(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int DbsvrToolImpl::Set(phxrpc::OptMap &opt_map) {
    dbsvr::SetReq req;
    dbsvr::SetResp resp;

    // TODO: fill req from opt_map

    DbsvrClient client;
    int ret{client.Set(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int DbsvrToolImpl::Get(phxrpc::OptMap &opt_map) {
    dbsvr::GetReq req;
    dbsvr::GetResp resp;

    // TODO: fill req from opt_map

    DbsvrClient client;
    int ret{client.Get(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

